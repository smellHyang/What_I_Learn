## 1. 스프링(Spring)

### 1-1. 개념

- 자바 플랫폼을 위한 오픈소스 어플리케이션 프레임워크
- DI, IoC, AOP가 주요 특징
    - sw의 결합도를 낮추워 단위테스트가 용이, 확장성 증가
- 모든 기능을 종합 제공하는 경량화 솔류션
    - 대규모 데이터 처리 및 트랜잭션이 동시에 사용자에게 행해지는 큰 규모의 환경을 개발할 때 적합
- 경량 컨테이너로 자바 객체(bean)을 직접 관리

⇒ 특정 배포 환경에 불필요한 연결 없이 비즈니스 로직에만 집중
### 1-2. 목표

- 의존성 주입(Dependency Injection)
    - 객체간 결합도를 낮추어 코드 재사용성을 향상 시키고, 단위테스트 용이
- 중복된 코드 제거
    - 개발자가 비즈니스 로직에만 집중 할 수 있도록
- 다른 프레임워크와의 통합
    - 각 기능에서 최선으로 구현된 프레임워크나 모듈과 통합하여 개발자가 비즈니스 로직외에 신경써야할 부분을 덜어주고
    - 생산성향상

## 2. 스프링부트(Spring Boot)

### 2-1. 개념

- 스프링 프레임워크를 사용하귀위한 설정의 많은 부분을 자동화
    - 자동 설정을 통해, 모든 내부 디펜던시를 관리할 수 있다.
- 스프링 기반 어플리케이션 비교적 쉽게 구현 가능

### 2-2. 목표

- 자동설정 지원
    - 스프링에서는 수많은 bean과 설정파일을 하나하나 등록해줘야 했다면 스프링 부트는 자동으로 등록하게 하여 서비스를 쉽게 구현하도록
- 의존성 관리 용이
    - spring boot start를 통해 spring-web, spring-webmvc, jackson-databind의 버전관리와 호환성을 고려하지 않아도 쉽게 관리 가능
- 내장 어플리케이션 서버 존재
    - 따로 서버를 설치하지 않아도 되고, 버전관리의 필요성이 없어짐
    - 어플리케이션 배포의 복잡성 down
