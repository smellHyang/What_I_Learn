## 1. TCP/UDP?

- 전송계층에서 사용하는 프로토콜으로 데이터를 응용프로토콜에게 패킷단위로 전달하는것이 목적

## 2. TCP(Transmission Control Protocol)

### 2-1. 개념

- 연결형 서비스를 지원하는 전송계층의 프로토콜
- 인터넷환경에서 데이터를 패킷 단위로 보내기 위해 IP와 함께 사용

### 2-2.특징

- 연결형서비스로 발신지와 수신지를 연결하여 패킷을 전송하기 위해경로를 배정( routing)
- 3-way hadnshaking과정을 통해 연결하고 4-way handsaking으로 해제
- 흐름제어 및 혼잡제어
- 안정성과 신뢰성 보장
- 속도 느림
- 데이터 전송 순서 O

### 2-3. 단점

- 패킷에 대한 응답때문에 시간 지연 및 CPU소모로 성능이 낮고 속도 느림

<aside>
💡 혼잡제어 : 네트워크 내의 패킷 수가 넘치지 않도록 방지하는것

</aside>

<aside>
💡 **흐름제어** : 송신측이 수신측의 처리속도 보다 더 빨리 데이터를 보내지 못하도록 제어(오버플로우 방지)

</aside>

## 3. UDP(User Datagram Protocol)

### 3-1. 개념

- 비연결형 서비스를 지원하는 전송계층 프로토콜
- 인터넷환경에서 서로 데이터를 주고받을때 신호 절차를 거치치 않고 일방적으로 데이터를 전달
- 데이터를 데이터 그램단위로 처리
- 실시간 서비스(streaming)에서 주로 사용(연속성)

### 3-2. 특징

- 비연결성 서비스로 연결을 위해 할당되는 경로가 없다.
- 정보를 주고받을때 신호절차를 거치지 않는다
- UDP헤더에서 최소한의 오류만 검출
- 신뢰성 낮다
- 속도 빠름
- 데이터 전송 순서 X

## 4. 비교

|  | TCP | UDP |
| --- | --- | --- |
| 연결방식  | 연결형서비스 | 비연결형 서비스 |
| 패킷 교환 방식 | 가상 회선 방식 | 데이터그램 방식 |
| 전송 순서 | O | X |
| 수신 여부 확인 | O | X |
| 통신 방식 | 1:1 통신 | 1:1, 1:N, N:M 통신 |
| 신뢰성 | O | X |
|  속도 | 빠름 | 느림 |
