# 클라이언트 회복성 패턴

## 1. 클라이언트 회복성 패턴

- 원격 서비스가 제대로 동작하지 못할때 원격자원을 호출하는 클라이언트 충돌을 막는것

## 2. 종류

- 클라이언트 측 로드밸런싱
    - client는 디스커버리에서 조회한 msa의 엔드포인트를 캐싱
    - 서비스의 모든 인스턴스를 검색 후 해당 서비스의 실제 위치를 캐싱
    - 문제가 된 서비스 인스턴스를 제거해 서비스 호출이 그 인스턴스로 전달되는 것을 막는다.
- 서킷브레이커 : client가 장애중인 서비스를 반복적으로 호출하지 못하도록
    - 원격 서비스 호출을 모니터링하고 오래걸린다면 서킷브레이커가 중재해 호출을 중단한다.
- 폴백 : 호출이 실패하면 실행가능한 대안이 있는지 확인
    - 원격 서비스에 대한 호출이 실패 할때 예외를 발생시키지 않고 서비스 소비자가 대체 코드 경로를 실행해 다른방법으로 작업을 수행
- 벌크헤드 :불량 서비스가 client의 모든자원을 고갈시키지 않도록 client가 수행하는 서비스를 격리
    - 원격자원에 대한 호출을 자원별 스레드 풀로 분리하므로 특정 원격 자원의 호출이 느려저 전체 어플리케이션이 다운될수 있는 위험을 줄인다.
    - 스레드 풀이 벌크헤드 역할

### 서킷브레이커 핵심 기능

- 빠른실패 : 원격 서비스 저하 시 애플리케이션을 빨리 실패함으로써 전체 다울될수 있는 자원고갈 이슈를 방지
- 원만한 실패 : 사용 의도로 수행하는 대체 매커니즘을 찾는다.
- 원활한 회복 : 요청 자원이 온라인 상태인지 주기적으로 확인하고, 사람의 개입없이 자원접근을 다시 허용
